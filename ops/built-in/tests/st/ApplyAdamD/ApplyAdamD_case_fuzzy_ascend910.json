[
    {"compile_flag": 1},
    {
        "op": "ApplyAdamD",
        "case_name": "test_apply_adam_d_000",
        "calc_expect_func_file":"test_apply_adam_d_golden.py:calc_expect_func",
        "input_desc": [
            {
                "format": "ND",
                "shape": [16, 16],
                "typical_shape": [16, 16],
                "shape_range": [[1, 100]],
                "type": "float32",
                "value_range": [[0 ,1]],
                "data_distribute": "uniform",
                "name": "var"
            },
            {
                "format": "ND",
                "shape": [16, 16],
                "typical_shape": [16, 16],
                "shape_range": [[1, 100]],
                "type": "float32",
                "value_range": [[0 ,1]],
                "data_distribute": "uniform",
                "name": "m"
            },
            {
                "format": "ND",
                "shape": [16, 16],
                "typical_shape": [16, 16],
                "shape_range": [[1, 100]],
                "type": "float32",
                "value_range": [[0 ,1]],
                "data_distribute": "uniform",
                "name": "v"
            },
            {
                "format": "ND",
                "shape": [1],
                "type": "float32",
                "value":[0.5],
                "name": "beta1_power"
            },
            {
                "format": "ND",
                "shape": [1],
                "type": "float32",
                "value":[0.5],
                "name": "beta2_power"
            },
            {
                "format": "ND",
                "shape": [1],
                "type": "float32",
                "value":[0.5],
                "name": "lr"
            },
            {
                "format": "ND",
                "shape": [1],
                "type": "float32",
                "value":[0.5],
                "name": "beta1"
            },
            {
                "format": "ND",
                "shape": [1],
                "type": "float32",
                "value":[0.5],
                "name": "beta2"
            },
            {
                "format": "ND",
                "shape": [1],
                "type": "float32",
                "value":[0.5],
                "name": "epsilon"
            },
            {
                "format": "ND",
                "shape": [16, 16],
                "typical_shape": [16, 16],
                "shape_range": [[1, 100]],
                "type": "float32",
                "value_range": [[0 ,1]],
                "data_distribute": "uniform",
                "name": "grad"
            }
        ],
        "output_desc": [
            {
                "format": "ND",
                "shape": [16, 16],
                "typical_shape": [16, 16],
                "shape_range": [[1, 100]],
                "type": "float32",
                "value_range": [[0 ,1]],
                "data_distribute": "uniform",
                "name": "var_out"
            },
            {
                "format": "ND",
                "shape": [16, 16],
                "typical_shape": [16, 16],
                "shape_range": [[1, 100]],
                "type": "float32",
                "value_range": [[0 ,1]],
                "data_distribute": "uniform",
                "name": "m_out"
            },
            {
                "format": "ND",
                "shape": [16, 16],
                "typical_shape": [16, 16],
                "shape_range": [[1, 100]],
                "type": "float32",
                "value_range": [[0 ,1]],
                "data_distribute": "uniform",
                "name": "v_out"
            }
        ],
        "attr": [
            {
                "name": "use_locking",
                "value": false,
                "type": "bool"
            },
            {
                "name": "use_nesterov",
                "value": false,
                "type": "bool"
            }
        ]
    }
]

