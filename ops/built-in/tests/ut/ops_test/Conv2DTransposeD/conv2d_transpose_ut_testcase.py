# -*- coding: UTF-8 -*-
"""
the conv2d_transpose ut testcase
"""
conv2d_transpose_op_testcase = [
    # dedy_dtype, w_dtype, dx_dtype, dedy_shape, w_shape, dx_shape, dedy_format,
    # w_format, dx_format, input_size, bias, stride, padding, output_padding, datflow, expect
    # float16
    (
        "float16",
        "float16",
        "float16",
        (16, 32, 2, 2),
        (32, 32, 3, 3),
        (16, 32, 5, 5),
        "NCHW",
        "NCHW",
        "NCHW",
        (16, 32, 5, 5),
        False,
        (1, 1, 2, 2),
        (0, 0, 0, 0),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        1,
        "success",
    ),
    (
        "float16",
        "float16",
        "float16",
        (16, 32, 2, 2),
        (32, 32, 3, 3),
        (16, 32, 5, 5),
        "NCHW",
        "NCHW",
        "NCHW",
        (16, 32, 5, 4),
        False,
        (1, 1, 2, 2),
        (0, 0, 0, 0),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        1,
        RuntimeError,
    ),
    (
        "float16",
        "float16",
        "float16",
        (16, 32, 2, 2),
        (32, 32, 3, 3),
        (16, 32, 5, 5),
        "NCHW",
        "NCHW",
        "NCHW",
        (16, 32, 5, 5),
        False,
        (1, 1, 2, 2),
        (0, 0, 0, 0),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        1,
        "success",
    ),
    (
        "float16",
        "float16",
        "float16",
        (2, 256, 192, 288),
        (256, 64, 1, 1),
        (2, 64, 192, 288),
        "NCHW",
        "NCHW",
        "NCHW",
        (2, 64, 192, 288),
        False,
        (1, 1, 1, 1),
        "SAME",
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        1,
        "success",
    ),
    (
        "float16",
        "float16",
        "float16",
        (1, 64, 1, 4096),
        (64, 16, 1, 32),
        (1, 16, 1, 8192),
        "NCHW",
        "NCHW",
        "NCHW",
        (0, 0, 0, 0),
        True,
        (1, 1, 2, 2),
        "SAME",
        (0, 0, 15, 15),
        (1, 1, 1, 1),
        1,
        "success",
    ),
    (
        "float16",
        "float16",
        "float16",
        (2, 64, 1, 4096),
        (64, 16, 1, 1),
        (2, 16, 1, 8192),
        "NCHW",
        "NCHW",
        "NCHW",
        (0, 0, 0, 0),
        False,
        (1, 1, 2, 2),
        "VALID",
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        1,
        "success",
    ),
    # bias
    (
        "float16",
        "float16",
        "float16",
        (16, 64, 192, 320),
        (64, 256, 1, 1),
        (16, 256, 192, 320),
        "NCHW",
        "NCHW",
        "NCHW",
        (16, 256, 192, 320),
        True,
        (1, 1, 1, 1),
        "SAME",
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        1,
        "success",
    ),
    # int8
    (
        "int8",
        "int8",
        "int32",
        (16, 32, 2, 2),
        (32, 32, 3, 3),
        (16, 32, 5, 5),
        "NCHW",
        "NCHW",
        "NCHW",
        (16, 32, 5, 5),
        True,
        (1, 1, 2, 2),
        (0, 0, 0, 0),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        1,
        "success",
    ),
    (
        "int8",
        "int8",
        "int32",
        (16, 32, 2, 2),
        (32, 32, 3, 3),
        (16, 32, 5, 5),
        "NCHW",
        "NCHW",
        "NCHW",
        (16, 32, 5, 4),
        False,
        (1, 1, 2, 2),
        (0, 0, 0, 0),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        1,
        RuntimeError,
    ),
    (
        "int8",
        "int8",
        "int32",
        (2, 256, 192, 288),
        (256, 64, 1, 1),
        (2, 64, 192, 288),
        "NCHW",
        "NCHW",
        "NCHW",
        (2, 64, 192, 288),
        False,
        (1, 1, 1, 1),
        "SAME",
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        1,
        "success",
    ),
]


conv2d_transpose_ut_fusion_case = [
    # soc dtype, dedy_shape, filter_shape, dedx_shape, padding, stride, dilution, bias_flag, fusionpass
    # the deconv+relu
    (
        ["Ascend310", "Ascend710", "Ascend910"],
        "float16",
        (1, 16, 3, 3),
        (16, 16, 1, 1),
        (1, 16, 3, 3),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        False,
        ["relu"],
    ),
    (
        ["Ascend310", "Ascend710", "Ascend910"],
        "float16",
        (1, 16, 3, 3),
        (16, 16, 1, 1),
        (1, 16, 3, 3),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        True,
        ["relu"],
    ),
    # deconv + dequant [dquant, sqrt, vector_mode, relu_mode]
    (
        ["Ascend310"],
        "int8",
        (1, 32, 3, 3),
        (32, 16, 1, 1),
        (1, 16, 3, 3),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        True,
        ["dequant", True, True, False],
    ),
    (
        ["Ascend310"],
        "int8",
        (1, 32, 3, 3),
        (32, 16, 1, 1),
        (1, 16, 3, 3),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        True,
        ["dequant", True, False, True],
    ),
    (
        ["Ascend310"],
        "int8",
        (1, 32, 3, 3),
        (32, 16, 1, 1),
        (1, 16, 3, 3),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        True,
        ["dequant", False, True, True],
    ),
    # deconv + dequant + quant [quant, sqrt, vector_mode, relu_mode, sqrt, scalar, offset]
    (
        ["Ascend310"],
        "int8",
        (1, 32, 3, 3),
        (32, 32, 3, 3),
        (1, 32, 3, 3),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        True,
        ["quant", False, False, False, False, 1.1, -7],
    ),
    (
        ["Ascend310"],
        "int8",
        (1, 32, 3, 3),
        (32, 32, 3, 3),
        (1, 32, 3, 3),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        True,
        ["quant", True, False, False, False, 1, -7],
    ),
    (
        ["Ascend310"],
        "int8",
        (1, 32, 3, 3),
        (32, 32, 1, 1),
        (1, 32, 3, 3),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        True,
        ["quant", True, True, False, True, 0.2, 0],
    ),
    # deconv + requant  [requant, vector_mode, relu_mode]
    (
        ["Ascend710"],
        "int8",
        (1, 32, 4, 4),
        (32, 32, 4, 4),
        (1, 32, 10, 10),
        (0, 0, 0, 0),
        (1, 1, 2, 2),
        (1, 1, 1, 1),
        True,
        ["requant", True, False],
    ),
    (
        ["Ascend710"],
        "int8",
        (1, 32, 4, 4),
        (32, 32, 4, 4),
        (1, 32, 10, 10),
        (0, 0, 0, 0),
        (1, 1, 2, 2),
        (1, 1, 1, 1),
        True,
        ["requant", False, True],
    ),
]


conv2d_transpose_ut_fusion_exception_case = [
    # soc, dtype, dedy_shape, filter_shape, dedx_shape, padding, stride, dilution, bias_flag, fusionpass
    # deconv + dequant + quant [quant, sqrt, vector_mode, relu_mode, sqrt, scalar, offset, round_mode]
    (
        ["Ascend310", "Ascend710", "Ascend910"],
        "int8",
        (2, 32, 3, 3),
        (32, 32, 3, 3),
        (2, 32, 3, 3),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        True,
        ["quant", False, False, False, False, 1.1, -7, 'ceil'],
    ),
    (
        ["Ascend310", "Ascend710", "Ascend910"],
        "int8",
        (2, 32, 3, 3),
        (32, 32, 1, 1),
        (2, 32, 3, 3),
        (0, 0, 0, 0),
        (1, 1, 1, 1),
        (1, 1, 1, 1),
        True,
        ["quant", True, True, False, True, 0.2, 0, 'ceil'],
    )
]
